@page "/"
@using Blazored.LocalStorage
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@inject ILocalStorageService localStorageService
@inject NavigationManager navigator
@inject ILogger<Index> logger
@inject HttpClient httpClient

<PageTitle>Index</PageTitle>
<div style="justify-items: center; width: 33%">

	<h1>Assetmanager</h1>
	<div style="display: flex; flex-direction: row; justify-content: space-around;">
		<label for="file-upload" class="btn btn-primary">
			Click here
		</label>
		<InputFile multiple OnChange="@LoadFiles" id="file-upload" style="display:none;" type="file" />

	</div>
</div>

<button @onclick="ProfileButton" class="btn btn-primary" style="position:absolute; left:90vw; max-width:5vw; width:5vw; padding-left:initial; padding-right:initial; top:0vw; height:5vh;">Profile</button>

@code {

	private void ProfileButton()
	{
		navigator.NavigateTo("/Profile");
	}

	private async void LoadFiles(InputFileChangeEventArgs e)
	{
		MultipartFormDataContent content = new();
		foreach (IBrowserFile browserFile in e.GetMultipleFiles())
		{
			HttpContent contentfile = new StreamContent(browserFile.OpenReadStream());
			content.Add(contentfile, "files", Path.GetFileName(browserFile.Name));
		}
		HttpRequestMessage message = new(HttpMethod.Post, $"http://localhost:5000/File/");
		message.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", await localStorageService.GetItemAsStringAsync("api-token"));

		message.Content = content;

		HttpResponseMessage result = await httpClient.SendAsync(message);
	}

	protected override async Task OnInitializedAsync()
	{
		string key = await localStorageService.GetItemAsStringAsync("api-token");

		if (String.IsNullOrEmpty(key))
		{
			navigator.NavigateTo("/Login");
		}

		base.OnInitialized();
	}
}